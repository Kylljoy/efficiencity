/*
A generic "Facility" class 
A facility produces products and lead into a feederNode
*/
class Facility {
    field outputNode; //The node this facility outputs to

    field x; //Graphical location of the facility, mostly irrelivant
    field y; //Ditto

    field productionTime = 1; //The amount of ticks required to produce a unit of resource
    field currentProductionStage = 0; //The variable that represents how many ticks have passed since production
    field resourceId; //The id of the resource produced
    field yield; //The amount of resource yielded from one production cycle
    
    field constantProduction = true; //Whether or not this facility will continuously attempt to produce

    constructor() {
        
    }

    function tick() {
        if (this.currentProductionStage == 0) {
            if (this.constantProduction) {
                this.currentProductionStage++;
                //print("Production Order: " + this.yield + " " + this.resourceId);
            }
        } else {
            this.currentProductionStage++;
        }
        if (this.currentProductionStage >= this.productionTime) {
            //print("Done!");
            this.currentProductionStage = 0;
            this.outputNode.addStock(this.yield);
        }
    }

    function requestProduction() {
        //print("Requested!");
        if (this.currentProductionStage == 0) {
            //print("Production Order: " + this.yield + " " + this.resourceId);
            this.currentProductionStage = 1;
        }
    }
}